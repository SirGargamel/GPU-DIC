float resultVal = 0;           
float sumWg = 0;
float temp, wGorig, wGdef, centerDefX, centerDefY, centerX, centerY;
if (deltaF != 0 && deltaG != 0) {	
	const float weight = weights[subsetId];
	
	centerX = subsetCenters[subsetId].x;
	centerY = subsetCenters[subsetId].y;
		
	centerDefX = centerX + deformation[0];
	centerDefY = centerY + deformation[1];
	
    for (int i = 0; i < subsetSize2; i++) {  		  
		wGorig = gauss(subsetLocal[i].x - centerX, subsetLocal[i].y - centerY, weight);
		wGdef = gauss(deformedFacet[i].x - centerDefX, deformedFacet[i].y - centerDefY, weight);
		temp = ((deformedI[i] / deltaG) * wGdef) - ((subsetI[i] / deltaF) * wGorig);
        resultVal +=  temp * temp;
		
		sumWg += wGdef * wGdef;
    }
	if (sumWg != 0) {
		resultVal /= sumWg;
	}
	
	resultVal = 1 - (resultVal / 2.0);
}